. Streams


 Streams are used to provide a sequence of data in an asynchronous manner
  The Stream API provides the await for and listen() methods for processing streams. Streams can be created in many ways, but they can only be used in the same manner. Here is an example: 

Future<int> sumStream(Stream<int> stream) async {   
  var sum = 0;   
   await for (var value in stream) {   
     sum += value;   
   }   
   return sum;   
} 


. Box Constraint

\Center(
  child: ConstrainedBox(
    constraints: const BoxConstraints(
      minWidth: 70,
      minHeight: 70,
      maxWidth: 150,
      maxHeight: 150,
    ),
    child: Container(color: red, width: 100, height: 100),
  ),
)